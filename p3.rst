..

pyFormex with Python3
=====================

2019 will be the year of actively transforming pyFormex to Python3.
There are many reasons for this:

- Active support for Python2 will stop on Jan 1, 2020. See https://pythonclock.org/
- NumPy, the core library for pyFormex, has stopped making new releases for Python2 since Jan 1, 2019 and will drop support on Jan 1, 2020. See https://docs.scipy.org/doc/numpy-1.14.2/neps/dropping-python2.7-proposal.html
- Many projects have already announced to stop supporting Python2. See https://python3statement.org/

All the basic dependencies of pyFormex are available (since long time) for Python3. So there is no reason anymore to not move completely to Python3.

Supporting both Python2 and Python3 becomes too heavy a task, and can't enjoy some serious improvements of the Python3 language and standard libraries.
Therefore, like so many other projects, pyFormex will drop support for Python2
as of Jan 1, 2020.

At the same time we will move from Qt4 to Qt5 widget libaries.
Upstream support of Qt4 has already ended since December 2015, and
newer Python3 interfaces (PySide2) concentrate on Qt5 only.


How to migrate to the Python3 version?
--------------------------------------
Of course you need to have all the required dependencies installed with
their Python3 version (see below.)

The last public release to support Python2 is pyFormex 1.0.7. Its startup
command has an optional FIRST -2 or -3 option to select the Python2 or Python3
version. Or alternatively, you can set an environment variable::
  PYFORMEX_PYTHON=3

If you run pyFormex from the sources in the git repository, the master branch
now only supports the Python3 version, and the above mentioned options and
environment variables are no longer used. Instead you'll get an error message
when trying to run a Python2 version, and by default Python3 will be used.

If for some reason you need to stay with the Python2 version, you should
switch to the 1.0.7 branch of the repository (but you will not be able to
use new developments).


Required packages (Debian style) for Python3 version
----------------------------------------------------
These are the requirements for the full functionality, including
building the accelerator libraries and documentation and running pytests::

- python3
- python3-dev
- python3-distutils
- python3-docutils
- python3-matplotlib
- python3-numpy
- python3-opengl
- python3-pil
- python3-pydicom
- python3-pyside2.qtcore
- python3-pyside2.qtgui
- python3-pyside2.qtopengl
- python3-pyside2.qtprintsupport
- python3-pyside2.qtwidgets
- python3-pyside2.qtx11extras
- python3-pytest
- python3-scipy
- python3-sphinx

Unfortunately there is currently no python3-pyside2-all in Debian, so you have
to install the individual packages.

Depending on you OS version, you may also have python3-pyside (without the 2)
packages available. These will likely also work. PySide is the interface with
the older Qt4 libraries, while PySide2 provides access to the newer Qt5 (you
may notice slight interface changes when switching from Qt4 to Qt5).

Other recommended packages::

- libgts-0.7-5
- libgts-bin
- libgts-dev
- admesh (we use the binary, not the Python interface)
- tetgen
- units

What to expect
--------------
Most of the code already runs very well under Python3. Most of the
GUI issues have been worked out. There may be some GUI functionality that
has not been tested yet. Active usage is required to help iron out the last
problems. Therefore, the Python3 version is forced upon all users of the
development sources. We hope that by the end of 2019 the Python3 version
will be thoroughly tested and future-proof.

.. End
